# 基础服务配置
server:
  port: 8761  # Eureka 默认端口

spring:
  application:
    name: base-service
  security:
    user:
      name: Deer
      password: Deer_small

  # 数据源配置 (具体值由使用模块覆盖)
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/deer?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 858414
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 监控配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  # Redis配置 (具体值由使用模块覆盖)
  redis:
    host: localhost
    port: 6379
    password:
    database: 0
    timeout: 3000
    lettuce:
      pool:
        max-active: 20
        max-wait: -1
        max-idle: 10
        min-idle: 0

# MyBatis-Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true  # 开启驼峰命名自动转换
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # 日志输出
  global-config:
    db-config:
      id-type: auto  # 主键生成策略
      logic-delete-value: 1  # 逻辑已删除值
      logic-not-delete-value: 0  # 逻辑未删除值

# JWT 配置
jwt:
  secret: base-service-secret-key
  expiration: 86400  # 24小时
  header: Authorization
  token-prefix: Bearer



# eureka注册中心配置
eureka:
  instance:
    hostname: localhost  # 实例主机名
    lease-renewal-interval-in-seconds: 10  # 客户端向服务端发送心跳的时间间隔（秒）
    lease-expiration-duration-in-seconds: 30  # 服务端在收到最后一次心跳后等待的时间（秒）

  client:
    # 是否向注册中心注册自己（单机模式不需要注册自己）
    register-with-eureka: false
    # 是否从注册中心获取注册信息（单机模式不需要）
    fetch-registry: false # false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    # Eureka Server 服务端配置
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

  server:
    enable-self-preservation: false  # 关闭自我保护模式（开发环境关闭，生产环境应开启）
    eviction-interval-timer-in-ms: 5000  # 清理间隔（毫秒）

# Actuator 端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics  # 开放健康检查和基本信息端点
      base-path: /manage
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
  health:
    db:
      enabled: false # 禁用数据源健康检查
    diskspace:
      threshold: 10MB